@model Beeuzer.Models.Produto

@{
    ViewBag.Title = "AtualizarProd";
    Layout = "~/Areas/Funcionario/Views/Shared/_LayoutAdm.cshtml";
}

<h2>Atualização de Produto</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.CodigoBarras, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.CodigoBarras, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.CodigoBarras, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.NomeProd, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.NomeProd, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.NomeProd, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Cor, htmlAttributes: new { @class = "control-label col-md-2" })
        <p class="lead">
            @Html.DropDownListFor(model => model.Cor,
                new List<SelectListItem> {
                    new SelectListItem { Value = "" , Text = "" },
                    new SelectListItem { Value = "Colorida" , Text = "Colorida" },
                    new SelectListItem { Value = "Neutra" , Text = "Neutra" },
                    new SelectListItem { Value = "Mista" , Text = "Mista" }
                },
                new { @class = "Produto" })
        </p>
        <p class="lead">
            @Html.ValidationMessageFor(model => model.Cor, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Tamanho, htmlAttributes: new { @class = "control-label col-md-2" })
        <p class="lead">
            @Html.DropDownListFor(model => model.Tamanho,
                new List<SelectListItem> {
                    new SelectListItem { Value = "0" , Text = "" },
                    new SelectListItem { Value = "PP" , Text = "PP" },
                    new SelectListItem { Value = "P" , Text = "P" },
                    new SelectListItem { Value = "M" , Text = "M" },
                    new SelectListItem { Value = "G" , Text = "G" },
                    new SelectListItem { Value = "GG" , Text = "GG" }
                },
                new { @class = "Produto" })
        </p>
        @Html.ValidationMessageFor(model => model.Tamanho, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ValorUnitario, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ValorUnitario, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ValorUnitario, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Qtd, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Qtd, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Qtd, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="AtualizarProd" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
